# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")

module_output_path = "safwk/safwk"

config("system_ability_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "//foundation/systemabilitymgr/safwk/services/safwk/include",
    "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk",
  ]
}

config("system_ability_all_deps_config") {
  include_dirs =
      [ "//foundation/systemabilitymgr/safwk/interfaces/innerkits/safwk" ]
}

ohos_static_library("system_ability_fwk_tdd") {
  sources = [
    "//foundation/systemabilitymgr/safwk/services/safwk/src/api_cache_manager.cpp",
    "//foundation/systemabilitymgr/safwk/services/safwk/src/local_ability_manager.cpp",
    "//foundation/systemabilitymgr/safwk/services/safwk/src/local_ability_manager_dumper.cpp",
    "//foundation/systemabilitymgr/safwk/services/safwk/src/local_ability_manager_stub.cpp",
    "//foundation/systemabilitymgr/safwk/services/safwk/src/system_ability.cpp",
    "//foundation/systemabilitymgr/safwk/services/safwk/src/system_ability_ondemand_reason.cpp",
  ]

  configs =
      [ "//foundation/systemabilitymgr/safwk/test/resource:coverage_flags" ]

  public_configs = [
    ":system_ability_config",
    ":system_ability_all_deps_config",
  ]
  if (is_standard_system) {
    external_deps = [
      "access_token:libaccesstoken_sdk",
      "c_utils:utils",
      "hilog:libhilog",
      "hitrace:hitrace_meter",
      "ipc:ipc_single",
      "samgr:samgr_common",
      "samgr:samgr_proxy",
    ]
  }

  part_name = "safwk"
  subsystem_name = "systemabilitymgr"
}

ohos_unittest("LocalAbilityManagerTest") {
  module_out_path = module_output_path
  resource_config_file =
      "//foundation/systemabilitymgr/safwk/test/resource/ohos_test.xml"

  include_dirs = [
    "//foundation/systemabilitymgr/safwk/services/safwk/include",
    "//foundation/systemabilitymgr/samgr/services/lsamgr/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/include",
  ]

  sources = [
    "./local_ability_manager_dumper_test.cpp",
    "./local_ability_manager_test.cpp",
    "./mock_sa_realize.cpp",
    "./system_ability_ondemand_reason_test.cpp",
    "//foundation/systemabilitymgr/samgr/services/dfx/source/hisysevent_adapter.cpp",
  ]

  configs =
      [ "//foundation/systemabilitymgr/safwk/test/resource:coverage_flags" ]

  deps = [
    ":system_ability_fwk_tdd",
    "//foundation/systemabilitymgr/safwk/test/mock/common/audio_ability:test_audio_ability",
    "//foundation/systemabilitymgr/safwk/test/mock/common/ondemand_ability:test_ondemand_ability",
    "//foundation/systemabilitymgr/safwk/test/mock/common/tt_ability:test_tt_ability",
    "//foundation/systemabilitymgr/safwk/test/mock/common/connect_ability:test_connect_ability",
    "//foundation/systemabilitymgr/safwk/test/mock/common/incomplete_ability:test_incomplete_ability",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/listen_ability:listen_test",
    "//third_party/googletest:gtest_main",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "hisysevent:libhisysevent",
    "ipc:ipc_core",
    "samgr:samgr_common",
    "samgr:samgr_proxy",
  ]
}

ohos_unittest("SystemAbilityTest") {
  module_out_path = module_output_path

  resource_config_file =
      "//foundation/systemabilitymgr/safwk/test/resource/ohos_test.xml"

  include_dirs = [
    "//foundation/systemabilitymgr/safwk/services/safwk/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/listen_ability/include",
  ]

  sources = [
    "./mock_sa_realize.cpp",
    "./sa_mock_permission.cpp",
    "./system_ability_test.cpp",
  ]

  configs =
      [ "//foundation/systemabilitymgr/safwk/test/resource:coverage_flags" ]

  deps = [
    ":system_ability_fwk_tdd",
    "//third_party/googletest:gtest_main",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_common",
  ]
}

ohos_unittest("CacheManagerTest") {
  module_out_path = module_output_path

  resource_config_file =
      "//foundation/systemabilitymgr/safwk/test/resource/ohos_test.xml"

  include_dirs = [
    "//foundation/systemabilitymgr/safwk/services/safwk/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/listen_ability/include",
    "//foundation/systemabilitymgr/safwk/test/mock/common/audio_ability/include",
  ]

  sources = [ "./api_cache_manager_test.cpp" ]

  configs =
      [ "//foundation/systemabilitymgr/safwk/test/resource:coverage_flags" ]

  deps = [
    ":system_ability_fwk_tdd",
    "listen_ability:listen_test",
    "test_sa_proxy_cache_ability:test_sa_proxy_cache",
    "//foundation/systemabilitymgr/safwk/test/mock/common/audio_ability:test_audio_ability",
    "//third_party/googletest:gtest_main",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "access_token:libaccesstoken_sdk",
    "access_token:libnativetoken",
    "access_token:libtoken_setproc",
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
    "samgr:samgr_common",
  ]
}

ohos_unittest("ExpireLruCacheTest") {
  module_out_path = module_output_path

  resource_config_file =
      "//foundation/systemabilitymgr/safwk/test/resource/ohos_test.xml"

  include_dirs = [
    "//foundation/systemabilitymgr/safwk/services/safwk/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/include",
  ]

  sources = [ "./expire_lru_cache_test.cpp" ]

  configs =
      [ "//foundation/systemabilitymgr/safwk/test/resource:coverage_flags" ]

  deps = [
    ":system_ability_fwk_tdd",
    "listen_ability:listen_test",
    "//third_party/googletest:gtest_main",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]
}

ohos_unittest("SaProxyCacheTest") {
  module_out_path = module_output_path

  resource_config_file =
      "//foundation/systemabilitymgr/safwk/test/resource/ohos_test.xml"

  include_dirs = [
    "//foundation/systemabilitymgr/safwk/services/safwk/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/test_sa_proxy_cache_ability/include",
    "//foundation/systemabilitymgr/safwk/test/services/safwk/unittest/listen_ability/include",
  ]

  sources = [ "./sa_proxy_cache_test.cpp" ]

  configs =
      [ "//foundation/systemabilitymgr/safwk/test/resource:coverage_flags" ]

  deps = [
    ":system_ability_fwk_tdd",
    "listen_ability:liblisten_ability_interface_proxy",
    "listen_ability:listen_test",
    "test_sa_proxy_cache_ability:test_sa_proxy_cache",
    "//third_party/googletest:gmock_main",
    "//third_party/googletest:gtest_main",
  ]

  if (target_cpu == "arm") {
    cflags = [ "-DBINDER_IPC_32BIT" ]
  }

  external_deps = [
    "c_utils:utils",
    "hilog:libhilog",
    "ipc:ipc_core",
  ]
}

group("unittest") {
  testonly = true
  deps = [
    ":CacheManagerTest",
    ":ExpireLruCacheTest",
    ":LocalAbilityManagerTest",
    ":SystemAbilityTest",
  ]
}
